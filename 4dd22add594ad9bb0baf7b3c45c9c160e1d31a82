{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "efaea4d3_da38f131",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001877
      },
      "writtenOn": "2024-04-18T11:04:04Z",
      "side": 1,
      "message": "remerge",
      "revId": "4dd22add594ad9bb0baf7b3c45c9c160e1d31a82",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c59481b5_338f8ae7",
        "filename": "participants/participant-impl-dme/src/main/java/org/oransc/participant/dme/handler/AutomationCompositionElementHandler.java",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2024-03-11T10:27:30Z",
      "side": 1,
      "message": "Is it really necessary to override a should-be-protected acm-internal impl class rather than implement the interface?",
      "range": {
        "startLine": 60,
        "startChar": 50,
        "endLine": 60,
        "endChar": 76
      },
      "revId": "4dd22add594ad9bb0baf7b3c45c9c160e1d31a82",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "630db421_5e4c250b",
        "filename": "participants/participant-impl-dme/src/main/java/org/oransc/participant/dme/handler/AutomationCompositionElementHandler.java",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1001877
      },
      "writtenOn": "2024-03-11T10:54:01Z",
      "side": 1,
      "message": "The AutomationCompositionElementListener interface now accommodates various argument types. To ensure backward compatibility, it offers the AcElementListenerV1 abstract class, which translates older arguments as needed to align with the newer arguments of AutomationCompositionElementListener.\n\nWe can choose to implement the AutomationCompositionElementListener and develop the logic independently. However, this approach may result in redundant code duplication with AcElementListenerV1.",
      "parentUuid": "c59481b5_338f8ae7",
      "range": {
        "startLine": 60,
        "startChar": 50,
        "endLine": 60,
        "endChar": 76
      },
      "revId": "4dd22add594ad9bb0baf7b3c45c9c160e1d31a82",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b223f40a_b58e5fa7",
        "filename": "participants/participant-impl-dme/src/main/java/org/oransc/participant/dme/handler/AutomationCompositionElementHandler.java",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2024-03-11T17:08:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "630db421_5e4c250b",
      "range": {
        "startLine": 60,
        "startChar": 50,
        "endLine": 60,
        "endChar": 76
      },
      "revId": "4dd22add594ad9bb0baf7b3c45c9c160e1d31a82",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81b9676a_31bfee1f",
        "filename": "participants/participant-impl-dme/src/main/java/org/oransc/participant/dme/handler/AutomationCompositionElementHandler.java",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2024-03-11T10:27:30Z",
      "side": 1,
      "message": "See comment above ... is this really needed?",
      "range": {
        "startLine": 73,
        "startChar": 8,
        "endLine": 73,
        "endChar": 30
      },
      "revId": "4dd22add594ad9bb0baf7b3c45c9c160e1d31a82",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffeb6e24_cf2f5268",
        "filename": "participants/participant-impl-dme/src/main/java/org/oransc/participant/dme/handler/AutomationCompositionElementHandler.java",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1001877
      },
      "writtenOn": "2024-03-11T17:17:43Z",
      "side": 1,
      "message": "It is required as we are using AcElementListenerV1.",
      "parentUuid": "81b9676a_31bfee1f",
      "range": {
        "startLine": 73,
        "startChar": 8,
        "endLine": 73,
        "endChar": 30
      },
      "revId": "4dd22add594ad9bb0baf7b3c45c9c160e1d31a82",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da4e6333_a3ab1d03",
        "filename": "participants/participant-impl-dme/src/main/java/org/oransc/participant/dme/handler/AutomationCompositionElementHandler.java",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2024-03-12T10:36:57Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ffeb6e24_cf2f5268",
      "range": {
        "startLine": 73,
        "startChar": 8,
        "endLine": 73,
        "endChar": 30
      },
      "revId": "4dd22add594ad9bb0baf7b3c45c9c160e1d31a82",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum vote is required for the \u0027Code-Review\u0027 label. \t\t\tA minumum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "4dd22add594ad9bb0baf7b3c45c9c160e1d31a82",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote from \u0027ORAN Required GHA\u0027 and one other CI or committer that is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX,user\u003doran.required.gha AND label:Verified\u003dMAX,count\u003e\u003d2 AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX,user=oran.required.gha AND label:Verified=MAX,count>=2 AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX,user=oran.required.gha","label:Verified=MAX,count>=2"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "4dd22add594ad9bb0baf7b3c45c9c160e1d31a82",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}